// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
    Mux(a=a[0], b=b[0], sel=sel[0], out=out00);
    Mux(a=c[0], b=d[0], sel=sel[0], out=out01);
    Mux(a=out00, b=out01, sel=sel[1], out=out[0]);

    Mux(a=a[1], b=b[1], sel=sel[0], out=out10);
    Mux(a=c[1], b=d[1], sel=sel[0], out=out11);
    Mux(a=out10, b=out11, sel=sel[1], out=out[1]);

    Mux(a=a[2], b=b[2], sel=sel[0], out=out20);
    Mux(a=c[2], b=d[2], sel=sel[0], out=out21);
    Mux(a=out20, b=out21, sel=sel[1], out=out[2]);

    Mux(a=a[3], b=b[3], sel=sel[0], out=out30);
    Mux(a=c[3], b=d[3], sel=sel[0], out=out31);
    Mux(a=out30, b=out31, sel=sel[1], out=out[3]);

    Mux(a=a[4], b=b[4], sel=sel[0], out=out40);
    Mux(a=c[4], b=d[4], sel=sel[0], out=out41);
    Mux(a=out40, b=out41, sel=sel[1], out=out[4]);

    Mux(a=a[5], b=b[5], sel=sel[0], out=out50);
    Mux(a=c[5], b=d[5], sel=sel[0], out=out51);
    Mux(a=out50, b=out51, sel=sel[1], out=out[5]);

    Mux(a=a[6], b=b[6], sel=sel[0], out=out60);
    Mux(a=c[6], b=d[6], sel=sel[0], out=out61);
    Mux(a=out60, b=out61, sel=sel[1], out=out[6]);

    Mux(a=a[7], b=b[7], sel=sel[0], out=out70);
    Mux(a=c[7], b=d[7], sel=sel[0], out=out71);
    Mux(a=out70, b=out71, sel=sel[1], out=out[7]);

    Mux(a=a[8], b=b[8], sel=sel[0], out=out80);
    Mux(a=c[8], b=d[8], sel=sel[0], out=out81);
    Mux(a=out80, b=out81, sel=sel[1], out=out[8]);

    Mux(a=a[9], b=b[9], sel=sel[0], out=out90);
    Mux(a=c[9], b=d[9], sel=sel[0], out=out91);
    Mux(a=out90, b=out91, sel=sel[1], out=out[9]);

    Mux(a=a[10], b=b[10], sel=sel[0], out=out100);
    Mux(a=c[10], b=d[10], sel=sel[0], out=out101);
    Mux(a=out100, b=out101, sel=sel[1], out=out[10]);

    Mux(a=a[11], b=b[11], sel=sel[0], out=out110);
    Mux(a=c[11], b=d[11], sel=sel[0], out=out111);
    Mux(a=out110, b=out111, sel=sel[1], out=out[11]);

    Mux(a=a[12], b=b[12], sel=sel[0], out=out120);
    Mux(a=c[12], b=d[12], sel=sel[0], out=out121);
    Mux(a=out120, b=out121, sel=sel[1], out=out[12]);

    Mux(a=a[13], b=b[13], sel=sel[0], out=out130);
    Mux(a=c[13], b=d[13], sel=sel[0], out=out131);
    Mux(a=out130, b=out131, sel=sel[1], out=out[13]);

    Mux(a=a[14], b=b[14], sel=sel[0], out=out140);
    Mux(a=c[14], b=d[14], sel=sel[0], out=out141);
    Mux(a=out140, b=out141, sel=sel[1], out=out[14]);

    Mux(a=a[15], b=b[15], sel=sel[0], out=out150);
    Mux(a=c[15], b=d[15], sel=sel[0], out=out151);
    Mux(a=out150, b=out151, sel=sel[1], out=out[15]);
}